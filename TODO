代码
-----

代码的问题最难搞，因为Redis不像MongoDB那样有自己的语言环境，所以目前的所有例子都是用Python客户端redis-py写的。

我考虑是不是可以有多个语言的版本？比如Ruby、Php之类的，但是这样一来，文章的长度就会极度膨胀了。

如果直接使用伪代码的话似乎能解决这个问题，但我个人觉得伪代码的可读性实在太差了。


类，有必要吗
-------------

有些实现被组成了类，主要是可以操作对象实例作为句柄，避免每次都要传key的麻烦，但是代码似乎看上去不如单纯使用函数直观(对比一下缓存的string实现和hash实现)。


实现的差异性
-------------

对于有一个以上的实现方式，是否要全部列举出来？还是只列举最合适的实现方式？


没有一个好的展示用例的方法
---------------------------

现在的版本是每个菜式只有菜谱，没有用例，主要是没有找到一种称心如意的用例展示方法。

考虑过将测试的文档和菜谱代码一起作为代码展示出来，但是多个assert很影响阅读。如果使用Python的docstring的话，又怕非Python使用者看不明白，而且我觉得这种方式也不太好(影响了对函数定义的阅读)。


图片
------

打算给一些菜式加上图片，比如好友关系(豆瓣/twitter?)、评分系统(quora/stackoverflow?)这些菜式，有图片的话更一目了然了。


更多菜
-------

目前已经想了大概30个菜左右，主要包括三类:

一是Redis本身函数的应用，比如用获取多个值，key模式匹配等；
二是在Redis的数据结构之上Hack的另一些数据结构，比如消息队列等；
第三是Redis的一些常见应用，也就是比较大路货的那些，比如用Redis表示好友关系什么的。
